# Generated by Django 3.2.13 on 2022-05-03 11:39

import core.models
import core.validators
import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.contrib.postgres.operations import BtreeGinExtension, TrigramExtension
from django.db import migrations, models
import django.db.models.deletion
import general.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        BtreeGinExtension(),
        TrigramExtension(),
        migrations.CreateModel(
            name='ContributorActivityRelations',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_changed', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('contributor_source_id', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='DateRangeSearchIndex',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='DateRelevanceIndex',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='DateSearchIndex',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', general.models.ShortUUIDField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('i', 'Image'), ('a', 'Audio'), ('v', 'Video'), ('d', 'Document'), ('x', 'Undefined')], max_length=1)),
                ('file', models.CharField(max_length=255)),
                ('mime_type', models.CharField(max_length=255)),
                ('exif', models.JSONField(blank=True, null=True)),
                ('license', models.JSONField(blank=True, null=True)),
                ('specifics', models.JSONField(blank=True, null=True)),
                ('featured', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=2147483647)),
                ('source_repo_media_id', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order', '-created'],
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_changed', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ShowroomObject',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_changed', models.DateTimeField(auto_now=True)),
                ('id', general.models.ShortUUIDField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('subtext', models.JSONField(blank=True, null=True)),
                ('type', models.CharField(choices=[('act', 'activity'), ('alb', 'album'), ('per', 'person'), ('ins', 'institution'), ('dep', 'department')], max_length=3)),
                ('list', models.JSONField(blank=True, null=True)),
                ('primary_details', models.JSONField(blank=True, null=True)),
                ('secondary_details', models.JSONField(blank=True, null=True)),
                ('locations', models.JSONField(blank=True, null=True)),
                ('source_repo_object_id', models.CharField(max_length=255)),
                ('source_repo_owner_id', models.CharField(blank=True, max_length=255, null=True)),
                ('source_repo_data', models.JSONField(default=dict)),
                ('date_synced', models.DateTimeField(editable=False, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SourceRepository',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('label_institution', models.CharField(max_length=255)),
                ('label_repository', models.CharField(max_length=255)),
                ('url_institution', models.CharField(max_length=255)),
                ('url_repository', models.CharField(max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('api_key', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityDetail',
            fields=[
                ('showroom_object', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.showroomobject')),
                ('activity_type', models.JSONField(blank=True, null=True)),
                ('keywords', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EntityDetail',
            fields=[
                ('showroom_object', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.showroomobject')),
                ('expertise', models.JSONField(blank=True, null=True)),
                ('showcase', models.JSONField(blank=True, null=True, validators=[core.validators.validate_showcase])),
                ('photo', models.URLField(blank=True, max_length=255, null=True)),
                ('list', models.JSONField(default=dict, validators=[core.validators.validate_entity_list])),
                ('list_ordering', models.JSONField(default=core.models.get_default_list_ordering, validators=[core.validators.validate_list_ordering])),
            ],
        ),
        migrations.CreateModel(
            name='TextSearchIndex',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('language', models.CharField(max_length=255)),
                ('text', models.TextField(default='')),
                ('text_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('showroom_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.showroomobject')),
            ],
        ),
        migrations.AddIndex(
            model_name='sourcerepository',
            index=models.Index(fields=['api_key'], name='core_source_api_key_08b0c3_idx'),
        ),
        migrations.AddField(
            model_name='showroomobject',
            name='belongs_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.showroomobject'),
        ),
        migrations.AddField(
            model_name='showroomobject',
            name='relations_to',
            field=models.ManyToManyField(blank=True, related_name='relations_from', through='core.Relation', to='core.ShowroomObject'),
        ),
        migrations.AddField(
            model_name='showroomobject',
            name='source_repo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.sourcerepository'),
        ),
        migrations.AddField(
            model_name='relation',
            name='from_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rel_from_set', to='core.showroomobject'),
        ),
        migrations.AddField(
            model_name='relation',
            name='to_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rel_to_set', to='core.showroomobject'),
        ),
        migrations.AddField(
            model_name='media',
            name='showroom_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.showroomobject'),
        ),
        migrations.AddField(
            model_name='datesearchindex',
            name='showroom_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.showroomobject'),
        ),
        migrations.AddField(
            model_name='daterelevanceindex',
            name='showroom_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.showroomobject'),
        ),
        migrations.AddField(
            model_name='daterangesearchindex',
            name='showroom_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.showroomobject'),
        ),
        migrations.AddField(
            model_name='contributoractivityrelations',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_usernames', to='core.showroomobject'),
        ),
        migrations.AddIndex(
            model_name='textsearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['text_vector'], name='core_textse_text_ve_25c111_gin'),
        ),
        migrations.AddIndex(
            model_name='showroomobject',
            index=django.contrib.postgres.indexes.GinIndex(fields=['title'], name='core_showro_title_491ff7_gin'),
        ),
        migrations.AddIndex(
            model_name='showroomobject',
            index=models.Index(fields=['source_repo_object_id'], name='core_showro_source__d220b7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='showroomobject',
            unique_together={('source_repo', 'source_repo_object_id')},
        ),
        migrations.AddIndex(
            model_name='relation',
            index=models.Index(fields=['from_object'], name='core_relati_from_ob_b8a972_idx'),
        ),
        migrations.AddIndex(
            model_name='relation',
            index=models.Index(fields=['to_object'], name='core_relati_to_obje_f9da9b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='relation',
            unique_together={('from_object', 'to_object')},
        ),
        migrations.AddIndex(
            model_name='contributoractivityrelations',
            index=models.Index(fields=['contributor_source_id'], name='core_contri_contrib_2c289e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contributoractivityrelations',
            unique_together={('contributor_source_id', 'activity')},
        ),
        migrations.AddField(
            model_name='activitydetail',
            name='featured_medium',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='featured_by', to='core.media'),
        ),
    ]
