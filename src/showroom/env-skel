## For development this can be set to True
# DEBUG=False

## If you are developing locally (with Django not running inside a container),
## set this to False
# DOCKER=True

## The base URL of the Django site, for local development http://127.0.0.1:8500/
SITE_URL=https://url/

## The generated OpenAPI 3.0 spec contains the URL and a description to the
## server hosting the API. This is by default the local dev server on 127.0.0.1:8500
## For any online or prod setting set the proper values here
# OPENAPI_SERVER_URL=
# OPENAPI_SERVER_DESCRIPTION=

## In a production deployment with other base components, this base path should
## be set for showroom. Can stay empty in local standalone development.
# FORCE_SCRIPT_NAME=/showroom

## The accepted HTTP Host headers, Django will serve. Defaults to urlparse(SITE_URL).hostname
# ALLOWED_HOSTS=

## In a production environment Django will be deployed behind a nginx proxy.
## For local development, set this to False
# BEHIND_PROXY=True

## Set up admin notifications and CAS based superusers here
# DJANGO_ADMINS=Full Name <email-with-name@example.com>,anotheremailwithoutname@example.com
# DJANGO_SUPERUSERS=(username1,username2)

## The base url for the CAS server, e.g. https://your.base.domain/cas
# CAS_SERVER=
## Wherever the CAS server should redirect to after successful auth, e.g. /api/v1/swagger
# CAS_REDIRECT_URL=

## In a production setup you should set up SMTP account to get notifications
# EMAIL_HOST_USER=
# EMAIL_HOST_PASSWORD=
# EMAIL_HOST=
# EMAIL_PORT=
# EMAIL_USE_TLS=
# EMAIL_USE_LOCALTIME=
# EMAIL_SUBJECT_PREFIX=[showroom]

## The domain that should be used for session cookies. Leave empty for a
## standard domain cookie
# SESSION_COOKIE_DOMAIN=

## Set up CSRF and CORS settings here. For a local development server you
## might want to set CSRF_TRUSTED_ORIGINS to localhost
# CSRF_COOKIE_DOMAIN=
# CSRF_TRUSTED_ORIGINS=
# CORS_ALLOW_CREDENTIALS=False
# CORS_ORIGIN_ALLOW_ALL=False
# CORS_ORIGIN_WHITELIST=

## The database port only needs to be changed, if you are running showroom
## locally in combination with e.g. portfolio also running locally. Then at
## least one of the database container ports needs to be mapped to a different
## value. So use whatever you set in your docker-compose.override.yml for
## showroom-postgres or leave the comment to use the default:
# POSTGRES_PORT=5432
## The database password has to be the same as the one set in ../../.env
POSTGRES_PASSWORD=password

## Similar to Postgres we also might need to change the Redis port, if
## the standard port is already in use by another container.
# REDIS_PORT=6379

## The default limit for a search, if now explicit limit parameter is set
# SEARCH_LIMIT=100

## The time span (in days) into the future and past, which should be used
## for the current_activities search filter
# CURRENT_ACTIVITIES_FUTURE=90
# CURRENT_ACTIVITIES_PAST=365

## A default showcase to be used in the initial endpoint, if the requested entity's showcase is empty
## Value should be a comma-separated list of ID:TYPE pairs, where TYPE can either be 'activity' or 'album'
# DEFAULT_SHOWCASE=

## A default entity id to be used in the /initial endpoint without any ID
# DEFAULT_ENTITY=
